[
  {
    "id": "data-summary",
    "title": "Random Data Summary",
    "description": "Generate comprehensive summary statistics for the uploaded random_data.parquet file.",
    "filename": "random_data_summary.py",
    "category": "analysis",
    "fileRequirements": [
      {
        "filename": "random_data.parquet",
        "title": "Random Data File",
        "description": "Upload data file for Python script testing and data analysis. Supports Parquet format.",
        "required": true,
        "fileType": ".parquet",
        "maxSize": 10
      }
    ],
    "dependencies": [
      {
        "type": "uploaded",
        "sourceId": "random_data.parquet"
      }
    ]
  },
  {
    "id": "data-visualization",
    "title": "Data Visualization",
    "description": "Create an HTML visualization report with interactive charts and data analysis.",
    "filename": "data_visualization.py",
    "category": "analysis",
    "fileRequirements": [
      {
        "filename": "random_data.parquet",
        "title": "Random Data File",
        "description": "Upload data file for Python script testing and data analysis. Supports Parquet format.",
        "required": true,
        "fileType": ".parquet",
        "maxSize": 10
      }
    ],
    "dependencies": [
      {
        "type": "uploaded",
        "sourceId": "random_data.parquet"
      }
    ]
  },
  {
    "id": "data-cleaning",
    "title": "Data Cleaning & Preprocessing",
    "description": "Clean and preprocess the random data, handle missing values, and prepare for analysis.",
    "filename": "data_cleaning.py",
    "category": "preprocessing",
    "fileRequirements": [
      {
        "filename": "random_data.parquet",
        "title": "Random Data File",
        "description": "Upload data file for Python script testing and data analysis. Supports Parquet format.",
        "required": true,
        "fileType": ".parquet",
        "maxSize": 10
      }
    ],
    "dependencies": [
      {
        "type": "uploaded",
        "sourceId": "random_data.parquet"
      }
    ]
  },
  {
    "id": "advanced-analysis",
    "title": "Advanced Statistical Analysis",
    "description": "Perform advanced statistical analysis on the random data including correlation analysis, hypothesis testing, and statistical modeling.",
    "filename": "advanced_analysis.py",
    "category": "analysis",
    "fileRequirements": [
      {
        "filename": "random_data.parquet",
        "title": "Random Data File",
        "description": "Upload data file for Python script testing and data analysis. Supports Parquet format.",
        "required": true,
        "fileType": ".parquet",
        "maxSize": 10
      }
    ],
    "dependencies": [
      {
        "type": "uploaded",
        "sourceId": "random_data.parquet"
      }
    ]
  },
  {
    "id": "linear-regression",
    "title": "Linear Regression Analysis",
    "description": "Perform linear regression analysis on numeric columns in the dataset and generate prediction models.",
    "filename": "linear_regression.py",
    "category": "modeling",
    "fileRequirements": [
      {
        "filename": "random_data.parquet",
        "title": "Random Data File",
        "description": "Upload data file for Python script testing and data analysis. Supports Parquet format.",
        "required": true,
        "fileType": ".parquet",
        "maxSize": 10
      }
    ],
    "dependencies": [
      {
        "type": "uploaded",
        "sourceId": "random_data.parquet"
      }
    ]
  },
  {
    "id": "geopandas-test",
    "title": "GeoSpatial Analysis Test",
    "description": "Test geospatial data processing capabilities using GeoPandas with sample geographic data.",
    "filename": "geopandas_test.py",
    "category": "geospatial",
    "fileRequirements": [
      {
        "filename": "random_data.parquet",
        "title": "Random Data File",
        "description": "Upload data file for Python script testing and data analysis. Supports Parquet format.",
        "required": true,
        "fileType": ".parquet",
        "maxSize": 10
      }
    ],
    "dependencies": [
      {
        "type": "uploaded",
        "sourceId": "random_data.parquet"
      }
    ]
  },
  {
    "id": "error-test",
    "title": "Error Handling Test",
    "description": "Test script designed to demonstrate error handling and debugging capabilities in the execution environment.",
    "filename": "error_test.py",
    "category": "testing",
    "dependencies": []
  },
  {
    "id": "matplotlib-demo",
    "title": "Matplotlib Visualization Demo",
    "description": "Demonstrate matplotlib plotting capabilities with sample data generation and various chart types.",
    "filename": "matplotlib_demo.py",
    "category": "visualization",
    "dependencies": []
  }
]